"""
Django settings for monitoring project.

Generated by 'django-admin startproject' using Django 2.0.7.
"""

import os
import logging
import google.cloud.logging
from google.cloud.logging.handlers import CloudLoggingHandler
from cryptography.fernet import Fernet


FERNET_KEY = b'J0NTjkfBO78cRKilEAno-VjmqIzPtuAHDvdfBXmrp6I='
HMAC_SECRET = b'\x94\xc93\x10\x97\xd3\xe0*\x98J\x8b2\x8bq\xd4e\xf6J\x1e!\xec\xeb\xff\xae\xaeL\x8c\xa1\x07\x88b"'
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
SECRET_KEY = 'svm_)tpa-o^gkn@81sel&lapq2jc7^^-n9c+4y&f9rymz$kum_'
DEBUG = True
ALLOWED_HOSTS = ['*']

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'MRI',
    'cliente',
    'alarms',
    'social_django',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'monitoring.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'monitoring', 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'monitoring.wsgi.application'

# Database
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'monitoring_db',
        'USER': 'monitoring_user',
        'PASSWORD': 'isis2503',
        'HOST': '10.128.0.52',
        'PORT': '',
    }
}

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',},
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))
STATIC_ROOT = os.path.join(PROJECT_ROOT, 'staticfiles')
STATIC_URL = '/static/'
MEDIA_ROOT = os.path.join(PROJECT_ROOT, 'static', 'media')

STATICFILES_DIRS = (
    os.path.join(PROJECT_ROOT, 'static'),
)

# Cloud Logging setup
cloud_logging_client = None
cloud_logging_handler = None

try:
    cloud_logging_client = google.cloud.logging.Client()
    cloud_logging_handler = CloudLoggingHandler(cloud_logging_client)
except Exception as e:
    print(f"[WARNING] Cloud Logging no pudo inicializarse: {e}")

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'WARNING',
    },
}

if cloud_logging_handler:
    LOGGING['handlers']['cloud_logging'] = {
        'level': 'INFO',
        'class': 'google.cloud.logging.handlers.CloudLoggingHandler',
        'client': cloud_logging_client,
        'name': 'django-app',
    }
    LOGGING['loggers']['django']['handlers'].append('cloud_logging')
    LOGGING['root']['handlers'].append('cloud_logging')

LOGIN_URL = "/login/auth0"
LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL ="https://dev-7gjasd3m5ecgyzk7.us.auth0.com/v2/logout?returnTo=http%3A%2F%2F34.172.211.192:8080"
SOCIAL_AUTH_TRAILING_SLASH = False # Remove end slash from routes
SOCIAL_AUTH_AUTH0_DOMAIN = 'dev-7gjasd3m5ecgyzk7.us.auth0.com'
SOCIAL_AUTH_AUTH0_KEY = 'HDMXN5FmEBR7PZYgsqpxu2X8lR1SDbyZ'
SOCIAL_AUTH_AUTH0_SECRET = 'ejrOKjOh379Wdr0Hdr2o3kNAt2Sgn1wUpUUKZJ84_2djMl49gNQ63495JbrPrdSD'
SOCIAL_AUTH_AUTH0_SCOPE = ['openid','profile','email','role']
AUTHENTICATION_BACKENDS = {'monitoring.auth0backend.Auth0','django.contrib.auth.backends.ModelBackend',}